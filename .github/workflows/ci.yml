# name: CI/CD Pipeline

# on:
#   push:
#     branches: [main, tashakim-streamline-workflows]
#   pull_request:
#     branches: [main, tashakim-streamline-workflows]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node: [14, 16, 18, 20]
    
#     defaults:
#       run:
#         working-directory: ./frontend
    
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4

#     - name: Create .env file on GitHub Actions Runner
#       run: |
#         echo "AWS_ACCESS_KEY_ID=${{ vars.AWS_ACCESS_KEY_ID }}" >> .env
#         echo "AWS_SECRET_ACCESS_KEY=${{ vars.AWS_SECRET_ACCESS_KEY }}" >> .env
#         echo "AWS_REGION=${{ vars.AWS_REGION }}" >> .env
#         echo "DOCKER_USERNAME=${{ vars.DOCKER_USERNAME }}" >> .env
#         echo "DOCKER_PASSWORD=${{ vars.DOCKER_PASSWORD }}" >> .env
#         echo "GH_TOKEN=${{ vars.GH_TOKEN }}" >> .env

#     - name: Load environment variables manually
#       run: |
#         if [ -f .env ]; then
#           export $(grep -v '^#' .env | xargs)
#         fi

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node }}

#     - name: Configure AWS Credentials
#       run: |
#         aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#         aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#         aws configure set region $AWS_REGION

#     - name: Deploy to AWS S3
#       run: aws s3 sync ./dist s3://my-website-bucket

#     - name: Install dependencies
#       run: npm install
      
#     - name: Build web
#       run: npx expo export -p web

#     - name: Run tests
#       run: npm test

#     - name: Build docs
#       run: mkdocs build

#     - name: Deploy docs to GitHub Pages
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         personal_token: $GH_TOKEN
#         publish_dir: ./site

#   docker-build-and-push:
#     runs-on: ubuntu-latest
#     needs: [build-and-test]  # Ensure Docker builds only if tests pass
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Load environment variables manually
#         run: |
#           if [ -f .env ]; then
#             export $(grep -v '^#' .env | xargs)
#           fi

#       - name: Log in to DockerHub
#         run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

#       - name: Build Docker Image
#         run: docker build -t myusername/myapp:latest .

#       - name: Push Docker Image to DockerHub
#         run: docker push myusername/myapp:latest

#   security-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: github/codeql-action/init@v2
#       - uses: github/codeql-action/analyze@v2

#   trivy-scan:
#     runs-on: ubuntu-latest
#     needs: [docker-build-and-push]
#     steps:
#       - uses: aquasecurity/trivy-action@master
#         with:
#           image-ref: 'myusername/myapp:latest'
#           format: 'table'
