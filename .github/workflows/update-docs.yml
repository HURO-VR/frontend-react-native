# name: Update docs with statistics

# on:
#   push:
#     branches: [main]
#   schedule:
#     - cron: "0 0 * * *"  # Runs daily at midnight UTC

# jobs:
#   update-readme:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Fetch GitHub Repository Stats
#         run: |
#           # Get dynamic GitHub repo stats using GitHub API
#           TOTAL_ISSUES=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open" | jq '. | length')
#           TOTAL_PRS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=open" | jq '. | length')
#           TOTAL_CONTRIBUTORS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/contributors" | jq '. | length')

#           # Get latest commit date, stars, forks
#           LAST_COMMIT_DATE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/commits/main" | jq -r '.commit.committer.date' | cut -d'T' -f1)
#           TOTAL_STARS=$(curl -s "https://api.github.com/repos/${{ github.repository }}" | jq '.stargazers_count')
#           TOTAL_FORKS=$(curl -s "https://api.github.com/repos/${{ github.repository }}" | jq '.forks_count')

#           # Get latest CI/CD pipeline status
#           PIPELINE_STATUS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=1" | jq -r '.workflow_runs[0].conclusion')

#           # Map pipeline status to badge
#           if [ "$PIPELINE_STATUS" = "success" ]; then
#             CI_BADGE="![CI](https://img.shields.io/badge/CI-Success-brightgreen?style=flat-square)"
#           elif [ "$PIPELINE_STATUS" = "failure" ]; then
#             CI_BADGE="![CI](https://img.shields.io/badge/CI-Failed-red?style=flat-square)"
#           else
#             CI_BADGE="![CI](https://img.shields.io/badge/CI-Unknown-lightgrey?style=flat-square)"
#           fi

#           # Save stats to a temporary file with badges
#           echo "-.-.-" >> stats_section.md
#           echo "### Project statistics (updated: $(date))" > stats_section.md
#           echo "" >> stats_section.md
#           echo "| Metric            | Count |" >> stats_section.md
#           echo "|-------------------|-------|" >> stats_section.md
#           echo "| 1. Open Issues    | **$TOTAL_ISSUES** |" >> stats_section.md
#           echo "| 2. Open PRs      | **$TOTAL_PRS** |" >> stats_section.md
#           echo "| 3. Contributors   | **$TOTAL_CONTRIBUTORS** |" >> stats_section.md
#           echo "| 4. Stars         | **$TOTAL_STARS** |" >> stats_section.md
#           echo "| 5. Forks         | **$TOTAL_FORKS** |" >> stats_section.md
#           echo "| 6. Last Commit   | **$LAST_COMMIT_DATE** |" >> stats_section.md
#           echo "" >> stats_section.md
#           echo "### ðŸ“Œ CI/CD Status" >> stats_section.md
#           echo "$CI_BADGE" >> stats_section.md
          
#       - name: Update README.md
#         run: |
#           # Define start and end markers
#           START_MARKER="-.-.-"
#           END_MARKER="## Environment Setup:"

#           # Extract content before START_MARKER
#           awk "/$START_MARKER/{exit} {print}" README.md > temp_readme.md

#           # Add the updated section
#           cat stats_section.md >> temp_readme.md

#           # Append content after END_MARKER
#           awk "/$END_MARKER/,0" README.md >> temp_readme.md

#           # Replace the old README with the updated one
#           mv temp_readme.md README.md

#       - name: Commit and Push Changes
#         run: |
#           git config --global user.name "github-actions"
#           git config --global user.email "github-actions@github.com"
#           git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN || env.GH_TOKEN }}@github.com/${{ github.repository }}.git
#           git add README.md
#           git commit -m "Auto-update README with latest project stats & CI/CD status [skip ci]" || echo "No changes to commit"
#           git push origin HEAD:${GITHUB_REF#refs/heads/}
